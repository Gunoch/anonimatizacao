Pending Improvements & Tasks:

1.  Enhanced Detection Accuracy and Coverage:
    *   Implement contextual disambiguation for more accurate sensitive data detection.
    *   Allow users to define custom detection rules (e.g., via a configuration file or UI).
    *   Develop more sophisticated address detection and anonymization logic.

2.  Improved User Experience (UX) and Interactivity:
    *   Interactive Preview & Confirmation: Allow users to review detected sensitive items on the PDF (or text) and selectively include/exclude them before anonymization.
    *   More Comprehensive/Exportable Anonymization Log: Enhance the current log, possibly with options to export it.
    *   Full Side-by-Side View: Implement a more robust visual comparison between original and anonymized content, potentially highlighting changes.

3.  Robustness and Practicality for Real-World Use:
    *   Handling of Scanned PDFs (OCR): Integrate an OCR library (e.g., Tesseract via pytesseract) to extract text from image-based PDFs.
    *   Granular Error Handling: Continue refining error handling throughout the application (app.py and utility modules) to provide more specific and user-friendly error messages for various failure scenarios (e.g., corrupted PDFs, model loading issues, file permission errors).

4.  More Reliable Validation:
    *   Use a more powerful/appropriate Portuguese-specific or multilingual LLM for the validation step to improve accuracy in detecting remaining PII.
    *   Refine validation prompting techniques or the analysis of the LLM's output for better results.

5.  Performance for Large Documents:
    *   Asynchronous Operations: Implement asynchronous processing (e.g., using `threading` or `asyncio`) for all potentially long-running tasks to keep the UI responsive. This includes:
        *   PDF text extraction.
        *   Sensitive data detection.
        *   Anonymization process.
        *   Validation model loading and execution (currently planned).
        *   Saving large files.

6.  Code & Project Cleanup:
    *   Manually delete the following old/redundant Python files from the workspace:
        - anonymization.py (if it's the old one)
        - extraction.py
        - gui.py
        - validation.py (if it's the old one)
        - reversion.py
        - utils.py (if empty or its functions were fully migrated)

7.  Testing and Refinement:
    *   Conduct thorough testing with a diverse range of PDF documents (various sources, layouts, sizes, types of sensitive data).
    *   Refine regex patterns and spaCy entity recognition based on testing results.
